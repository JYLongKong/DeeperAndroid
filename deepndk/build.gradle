if (isRelease) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'kotlin-android'

android {
    compileSdk deepCompileSdk
    ndkVersion deepNDKVersion
    defaultConfig {
        if (!isRelease) {
            applicationId "${deepApplicationId}.ndk"
        }
        minSdk deepMinSdk
        targetSdk deepTargetSdk
        versionCode deepVersionCode
        versionName deepVersionName

        consumerProguardFiles "consumer-rules.pro"

        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters 'armeabi-v7a'    // CMake compile these abi
            }
        }
        ndk {
            abiFilters 'armeabi-v7a'    // apk contains these abi
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility java_version
        targetCompatibility java_version
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    sourceSets {
        main {
            if (isRelease) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    implementation project(':libcommon')
    implementation project(':libbase')
}
